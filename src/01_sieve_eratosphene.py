# -*- coding: utf-8 -*-

# Алгоритм решето Эратосфена. Нахождение последовательности простых чисел, не превышающе заданной длины.
from math import sqrt, floor


def sieve(len):
    # Генерируем массив начальных значений от 2 до len;
    init_array = [a for a in range(0, len+1)]
    # 1 - не простое число!
    init_array[1] = 0
    # Идет проход по значениям, не превышающих квадрат len
    for z in range(2, int(floor(sqrt(len))) + 1):
        # Элемент еще не удален из начального массива
        if init_array[z] != 0:
            # Минимальное значение, с которого можно начать проходить массив
            j = z*z
            # Пока не дойдем по значениям до конца массива
            # Удаляем все кратные значения из массива
            while j <= len:
                init_array[j] = 0
                j = j + z

    # Выводим все простые числа после вычислений
    for s in init_array:
        if s!=0:
            print s

sieve(27)